#!/bin/bash

# Auto-generate comprehensive changelog from git commits
# Usage: ./scripts/generate-changelog.sh [days] [output-file]
# Example: ./scripts/generate-changelog.sh 7 docs/RECENT_CHANGES.md

DAYS="${1:-7}"  # Default: last 7 days
OUTPUT="${2:-docs/RECENT_CHANGES.md}"
REPO_ROOT="$(git rev-parse --show-toplevel)"

echo "🔍 Generating changelog for last $DAYS days..."
echo ""

# Create output file
mkdir -p "$(dirname "$OUTPUT")"
cat > "$OUTPUT" << EOF
# 📝 Recent Changes - Auto-Generated

**Generated**: $(date -u +"%Y-%m-%d %H:%M UTC")  
**Period**: Last $DAYS days  
**Source**: Git commit history

---

## 📊 Summary

EOF

# Get commit statistics
TOTAL_COMMITS=$(git log --since="$DAYS days ago" --oneline | wc -l | tr -d ' ')
FILES_CHANGED=$(git diff --name-only HEAD~$TOTAL_COMMITS HEAD 2>/dev/null | wc -l | tr -d ' ')
ADDITIONS=$(git diff --shortstat HEAD~$TOTAL_COMMITS HEAD 2>/dev/null | grep -oE '[0-9]+ insertion' | grep -oE '[0-9]+' || echo "0")
DELETIONS=$(git diff --shortstat HEAD~$TOTAL_COMMITS HEAD 2>/dev/null | grep -oE '[0-9]+ deletion' | grep -oE '[0-9]+' || echo "0")

cat >> "$OUTPUT" << EOF
- **Commits**: $TOTAL_COMMITS
- **Files Changed**: $FILES_CHANGED
- **Lines Added**: +$ADDITIONS
- **Lines Removed**: -$DELETIONS

---

## 📋 Commit Log (Most Recent First)

EOF

# Get detailed commit log with file changes
git log --since="$DAYS days ago" \
  --pretty=format:"### %h - %s%n%n**Date**: %ad  %n**Author**: %an  %n**Type**: %s%n" \
  --date=format:"%Y-%m-%d %H:%M" \
  --name-status >> "$OUTPUT"

cat >> "$OUTPUT" << EOF

---

## 📁 Files Modified (Last $DAYS Days)

\`\`\`
EOF

git diff --name-only HEAD~$TOTAL_COMMITS HEAD 2>/dev/null | sort | uniq >> "$OUTPUT" 2>/dev/null || echo "No changes detected" >> "$OUTPUT"

cat >> "$OUTPUT" << EOF
\`\`\`

---

## 🏷️ Changes by Type

EOF

# Categorize commits by conventional commit type
git log --since="$DAYS days ago" --oneline | awk '{print $2}' | grep -oE '^[a-z]+' | sort | uniq -c | sort -rn | while read count type; do
  echo "- **$type**: $count commits" >> "$OUTPUT"
done

cat >> "$OUTPUT" << EOF

---

## 📦 Changes by Component

EOF

# Group by scope (if using conventional commits)
git log --since="$DAYS days ago" --oneline | grep -oE '\([a-z-]+\)' | tr -d '()' | sort | uniq -c | sort -rn | while read count scope; do
  echo "- **$scope**: $count changes" >> "$OUTPUT"
done

cat >> "$OUTPUT" << EOF

---

## 🔍 Detailed Changes by File Type

### TypeScript/JavaScript Files
\`\`\`
EOF

git diff --stat HEAD~$TOTAL_COMMITS HEAD -- '*.ts' '*.tsx' '*.js' '*.jsx' 2>/dev/null | head -30 >> "$OUTPUT"

cat >> "$OUTPUT" << EOF
\`\`\`

### CSS/Styles
\`\`\`
EOF

git diff --stat HEAD~$TOTAL_COMMITS HEAD -- '*.css' '*.scss' 2>/dev/null | head -10 >> "$OUTPUT"

cat >> "$OUTPUT" << EOF
\`\`\`

### Configuration Files
\`\`\`
EOF

git diff --stat HEAD~$TOTAL_COMMITS HEAD -- '*.json' '*.yaml' '*.yml' '*.toml' 2>/dev/null | head -10 >> "$OUTPUT"

cat >> "$OUTPUT" << EOF
\`\`\`

---

## 💡 Quick Context for AI Agents

### What Changed
EOF

# Extract commit messages for AI context
git log --since="$DAYS days ago" --pretty=format:"- %s (%h)" >> "$OUTPUT"

cat >> "$OUTPUT" << EOF


### Key Technical Decisions
EOF

# Extract commits with "BREAKING", "feat", or "fix"
git log --since="$DAYS days ago" --grep="BREAKING\|feat\|fix" --pretty=format:"- **%s** - %b" >> "$OUTPUT"

cat >> "$OUTPUT" << EOF


### Files You'll Need to Know About
\`\`\`
EOF

# Most frequently changed files
git log --since="$DAYS days ago" --name-only --pretty=format:"" | grep -v '^$' | sort | uniq -c | sort -rn | head -20 >> "$OUTPUT"

cat >> "$OUTPUT" << EOF
\`\`\`

---

## 🎯 Next Session Checklist

- [ ] Review above changes for context
- [ ] Check for TODO comments in modified files
- [ ] Verify all tests still pass
- [ ] Update CURRENT_SESSION.md with today's work
- [ ] Run this script again at end of session

---

_Generated by: scripts/generate-changelog.sh_  
_To regenerate: \`./scripts/generate-changelog.sh [days] [output-file]\`_
EOF

echo "✅ Changelog generated: $OUTPUT"
echo ""
echo "📖 Quick preview:"
head -50 "$OUTPUT"
echo ""
echo "💡 Tip: Add this to your .git/hooks/post-commit for auto-updates!"
